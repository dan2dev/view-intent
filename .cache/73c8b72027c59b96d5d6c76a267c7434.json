{"dependencies":[{"name":"D:\\dan2dev\\view-intent\\node_modules\\class-transformer\\package.json","includedInParent":true,"mtime":1517753085000},{"name":"D:\\dan2dev\\view-intent\\package.json","includedInParent":true,"mtime":1529523551431},{"name":"D:\\dan2dev\\view-intent\\.babelrc","includedInParent":true,"mtime":1529523303783},{"name":"./storage","loc":{"line":3,"column":24},"parent":"D:\\dan2dev\\view-intent\\node_modules\\class-transformer\\TransformOperationExecutor.js","resolved":"D:\\dan2dev\\view-intent\\node_modules\\class-transformer\\storage.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage_1 = require(\"./storage\");\nvar TransformationType;\n(function (TransformationType) {\n    TransformationType[TransformationType[\"PLAIN_TO_CLASS\"] = 0] = \"PLAIN_TO_CLASS\";\n    TransformationType[TransformationType[\"CLASS_TO_PLAIN\"] = 1] = \"CLASS_TO_PLAIN\";\n    TransformationType[TransformationType[\"CLASS_TO_CLASS\"] = 2] = \"CLASS_TO_CLASS\";\n})(TransformationType = exports.TransformationType || (exports.TransformationType = {}));\nvar TransformOperationExecutor = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function TransformOperationExecutor(transformationType, options) {\n        this.transformationType = transformationType;\n        this.options = options;\n        // -------------------------------------------------------------------------\n        // Private Properties\n        // -------------------------------------------------------------------------\n        this.transformedTypesMap = new Map();\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    TransformOperationExecutor.prototype.transform = function (source, value, targetType, arrayType, isMap, level) {\n        var _this = this;\n        if (level === void 0) { level = 0; }\n        if (value instanceof Array || value instanceof Set) {\n            var newValue_1 = arrayType && this.transformationType === TransformationType.PLAIN_TO_CLASS ? new arrayType() : [];\n            value.forEach(function (subValue, index) {\n                var subSource = source ? source[index] : undefined;\n                if (!_this.options.enableCircularCheck || !_this.isCircular(subValue, level)) {\n                    var value_1 = _this.transform(subSource, subValue, targetType, undefined, subValue instanceof Map, level + 1);\n                    if (newValue_1 instanceof Set) {\n                        newValue_1.add(value_1);\n                    }\n                    else {\n                        newValue_1.push(value_1);\n                    }\n                }\n                else if (_this.transformationType === TransformationType.CLASS_TO_CLASS) {\n                    if (newValue_1 instanceof Set) {\n                        newValue_1.add(subValue);\n                    }\n                    else {\n                        newValue_1.push(subValue);\n                    }\n                }\n            });\n            return newValue_1;\n        }\n        else if (targetType === String && !isMap) {\n            return String(value);\n        }\n        else if (targetType === Number && !isMap) {\n            return Number(value);\n        }\n        else if (targetType === Boolean && !isMap) {\n            return Boolean(value);\n        }\n        else if ((targetType === Date || value instanceof Date) && !isMap) {\n            if (value instanceof Date) {\n                return new Date(value.valueOf());\n            }\n            if (value === null || value === undefined)\n                return value;\n            return new Date(value);\n        }\n        else if (typeof value === \"object\" && value !== null) {\n            // try to guess the type\n            if (!targetType && value.constructor !== Object /* && TransformationType === TransformationType.CLASS_TO_PLAIN*/)\n                targetType = value.constructor;\n            if (!targetType && source)\n                targetType = source.constructor;\n            if (this.options.enableCircularCheck) {\n                // add transformed type to prevent circular references\n                this.transformedTypesMap.set(value, { level: level, object: value });\n            }\n            var keys = this.getKeys(targetType, value);\n            var newValue = source ? source : {};\n            if (!source && (this.transformationType === TransformationType.PLAIN_TO_CLASS || this.transformationType === TransformationType.CLASS_TO_CLASS)) {\n                if (isMap) {\n                    newValue = new Map();\n                }\n                else if (targetType) {\n                    newValue = new targetType();\n                }\n                else {\n                    newValue = {};\n                }\n            }\n            var _loop_1 = function (key) {\n                var valueKey = key, newValueKey = key, propertyName = key;\n                if (!this_1.options.ignoreDecorators && targetType) {\n                    if (this_1.transformationType === TransformationType.PLAIN_TO_CLASS) {\n                        var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadataByCustomName(targetType, key);\n                        if (exposeMetadata) {\n                            propertyName = exposeMetadata.propertyName;\n                            newValueKey = exposeMetadata.propertyName;\n                        }\n                    }\n                    else if (this_1.transformationType === TransformationType.CLASS_TO_PLAIN || this_1.transformationType === TransformationType.CLASS_TO_CLASS) {\n                        var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(targetType, key);\n                        if (exposeMetadata && exposeMetadata.options && exposeMetadata.options.name)\n                            newValueKey = exposeMetadata.options.name;\n                    }\n                }\n                // get a subvalue\n                var subValue = undefined;\n                if (value instanceof Map) {\n                    subValue = value.get(valueKey);\n                }\n                else if (value[valueKey] instanceof Function) {\n                    subValue = value[valueKey]();\n                }\n                else {\n                    subValue = value[valueKey];\n                }\n                // determine a type\n                var type = undefined, isSubValueMap = subValue instanceof Map;\n                if (targetType && isMap) {\n                    type = targetType;\n                }\n                else if (targetType) {\n                    var metadata = storage_1.defaultMetadataStorage.findTypeMetadata(targetType, propertyName);\n                    if (metadata) {\n                        var options = { newObject: newValue, object: value, property: propertyName };\n                        type = metadata.typeFunction(options);\n                        isSubValueMap = isSubValueMap || metadata.reflectedType === Map;\n                    }\n                    else if (this_1.options.targetMaps) {\n                        this_1.options.targetMaps\n                            .filter(function (map) { return map.target === targetType && !!map.properties[propertyName]; })\n                            .forEach(function (map) { return type = map.properties[propertyName]; });\n                    }\n                }\n                // if value is an array try to get its custom array type\n                var arrayType_1 = value[valueKey] instanceof Array ? this_1.getReflectedType(targetType, propertyName) : undefined;\n                // const subValueKey = TransformationType === TransformationType.PLAIN_TO_CLASS && newKeyName ? newKeyName : key;\n                var subSource = source ? source[valueKey] : undefined;\n                // if its deserialization then type if required\n                // if we uncomment this types like string[] will not work\n                // if (this.transformationType === TransformationType.PLAIN_TO_CLASS && !type && subValue instanceof Object && !(subValue instanceof Date))\n                //     throw new Error(`Cannot determine type for ${(targetType as any).name }.${propertyName}, did you forget to specify a @Type?`);\n                // if newValue is a source object that has method that match newKeyName then skip it\n                if (newValue.constructor.prototype) {\n                    var descriptor = Object.getOwnPropertyDescriptor(newValue.constructor.prototype, newValueKey);\n                    if ((this_1.transformationType === TransformationType.PLAIN_TO_CLASS || this_1.transformationType === TransformationType.CLASS_TO_CLASS)\n                        && (newValue[newValueKey] instanceof Function || (descriptor && !descriptor.set)))\n                        return \"continue\";\n                }\n                if (!this_1.options.enableCircularCheck || !this_1.isCircular(subValue, level)) {\n                    var transformKey = this_1.transformationType === TransformationType.PLAIN_TO_CLASS ? newValueKey : key;\n                    var finalValue = this_1.transform(subSource, subValue, type, arrayType_1, isSubValueMap, level + 1);\n                    finalValue = this_1.applyCustomTransformations(finalValue, targetType, transformKey, value, this_1.transformationType);\n                    if (newValue instanceof Map) {\n                        newValue.set(newValueKey, finalValue);\n                    }\n                    else {\n                        newValue[newValueKey] = finalValue;\n                    }\n                }\n                else if (this_1.transformationType === TransformationType.CLASS_TO_CLASS) {\n                    var finalValue = subValue;\n                    finalValue = this_1.applyCustomTransformations(finalValue, targetType, key, value, this_1.transformationType);\n                    if (newValue instanceof Map) {\n                        newValue.set(newValueKey, finalValue);\n                    }\n                    else {\n                        newValue[newValueKey] = finalValue;\n                    }\n                }\n            };\n            var this_1 = this;\n            // traverse over keys\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                _loop_1(key);\n            }\n            return newValue;\n        }\n        else {\n            return value;\n        }\n    };\n    TransformOperationExecutor.prototype.applyCustomTransformations = function (value, target, key, obj, transformationType) {\n        var _this = this;\n        var metadatas = storage_1.defaultMetadataStorage.findTransformMetadatas(target, key, this.transformationType);\n        // apply versioning options\n        if (this.options.version !== undefined) {\n            metadatas = metadatas.filter(function (metadata) {\n                if (!metadata.options)\n                    return true;\n                return _this.checkVersion(metadata.options.since, metadata.options.until);\n            });\n        }\n        // apply grouping options\n        if (this.options.groups && this.options.groups.length) {\n            metadatas = metadatas.filter(function (metadata) {\n                if (!metadata.options)\n                    return true;\n                return _this.checkGroups(metadata.options.groups);\n            });\n        }\n        else {\n            metadatas = metadatas.filter(function (metadata) {\n                return !metadata.options || !metadata.options.groups || !metadata.options.groups.length;\n            });\n        }\n        metadatas.forEach(function (metadata) {\n            value = metadata.transformFn(value, obj, transformationType);\n        });\n        return value;\n    };\n    // preventing circular references\n    TransformOperationExecutor.prototype.isCircular = function (object, level) {\n        var transformed = this.transformedTypesMap.get(object);\n        return transformed !== undefined && transformed.level < level;\n    };\n    TransformOperationExecutor.prototype.getReflectedType = function (target, propertyName) {\n        if (!target)\n            return undefined;\n        var meta = storage_1.defaultMetadataStorage.findTypeMetadata(target, propertyName);\n        return meta ? meta.reflectedType : undefined;\n    };\n    TransformOperationExecutor.prototype.getKeys = function (target, object) {\n        var _this = this;\n        // determine exclusion strategy\n        var strategy = storage_1.defaultMetadataStorage.getStrategy(target);\n        if (strategy === \"none\")\n            strategy = this.options.strategy || \"exposeAll\"; // exposeAll is default strategy\n        // get all keys that need to expose\n        var keys = [];\n        if (strategy === \"exposeAll\") {\n            if (object instanceof Map) {\n                keys = Array.from(object.keys());\n            }\n            else {\n                keys = Object.keys(object);\n            }\n        }\n        if (!this.options.ignoreDecorators && target) {\n            // add all exposed to list of keys\n            var exposedProperties = storage_1.defaultMetadataStorage.getExposedProperties(target, this.transformationType);\n            if (this.transformationType === TransformationType.PLAIN_TO_CLASS) {\n                exposedProperties = exposedProperties.map(function (key) {\n                    var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(target, key);\n                    if (exposeMetadata && exposeMetadata.options && exposeMetadata.options.name) {\n                        return exposeMetadata.options.name;\n                    }\n                    return key;\n                });\n            }\n            keys = keys.concat(exposedProperties);\n            // exclude excluded properties\n            var excludedProperties_1 = storage_1.defaultMetadataStorage.getExcludedProperties(target, this.transformationType);\n            if (excludedProperties_1.length > 0) {\n                keys = keys.filter(function (key) {\n                    return excludedProperties_1.indexOf(key) === -1;\n                });\n            }\n            // apply versioning options\n            if (this.options.version !== undefined) {\n                keys = keys.filter(function (key) {\n                    var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(target, key);\n                    if (!exposeMetadata || !exposeMetadata.options)\n                        return true;\n                    return _this.checkVersion(exposeMetadata.options.since, exposeMetadata.options.until);\n                });\n            }\n            // apply grouping options\n            if (this.options.groups && this.options.groups.length) {\n                keys = keys.filter(function (key) {\n                    var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(target, key);\n                    if (!exposeMetadata || !exposeMetadata.options)\n                        return true;\n                    return _this.checkGroups(exposeMetadata.options.groups);\n                });\n            }\n            else {\n                keys = keys.filter(function (key) {\n                    var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(target, key);\n                    return !exposeMetadata || !exposeMetadata.options || !exposeMetadata.options.groups || !exposeMetadata.options.groups.length;\n                });\n            }\n        }\n        // exclude prefixed properties\n        if (this.options.excludePrefixes && this.options.excludePrefixes.length) {\n            keys = keys.filter(function (key) { return _this.options.excludePrefixes.every(function (prefix) {\n                return key.substr(0, prefix.length) !== prefix;\n            }); });\n        }\n        // make sure we have unique keys\n        keys = keys.filter(function (key, index, self) {\n            return self.indexOf(key) === index;\n        });\n        return keys;\n    };\n    TransformOperationExecutor.prototype.checkVersion = function (since, until) {\n        var decision = true;\n        if (decision && since)\n            decision = this.options.version >= since;\n        if (decision && until)\n            decision = this.options.version < until;\n        return decision;\n    };\n    TransformOperationExecutor.prototype.checkGroups = function (groups) {\n        if (!groups)\n            return true;\n        return this.options.groups.some(function (optionGroup) { return groups.indexOf(optionGroup) !== -1; });\n    };\n    return TransformOperationExecutor;\n}());\nexports.TransformOperationExecutor = TransformOperationExecutor;\n\n//# sourceMappingURL=TransformOperationExecutor.js.map\n","map":{"mappings":[{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"..\\node_modules\\class-transformer\\TransformOperationExecutor.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}}],"sources":{"..\\node_modules\\class-transformer\\TransformOperationExecutor.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage_1 = require(\"./storage\");\nvar TransformationType;\n(function (TransformationType) {\n    TransformationType[TransformationType[\"PLAIN_TO_CLASS\"] = 0] = \"PLAIN_TO_CLASS\";\n    TransformationType[TransformationType[\"CLASS_TO_PLAIN\"] = 1] = \"CLASS_TO_PLAIN\";\n    TransformationType[TransformationType[\"CLASS_TO_CLASS\"] = 2] = \"CLASS_TO_CLASS\";\n})(TransformationType = exports.TransformationType || (exports.TransformationType = {}));\nvar TransformOperationExecutor = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function TransformOperationExecutor(transformationType, options) {\n        this.transformationType = transformationType;\n        this.options = options;\n        // -------------------------------------------------------------------------\n        // Private Properties\n        // -------------------------------------------------------------------------\n        this.transformedTypesMap = new Map();\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    TransformOperationExecutor.prototype.transform = function (source, value, targetType, arrayType, isMap, level) {\n        var _this = this;\n        if (level === void 0) { level = 0; }\n        if (value instanceof Array || value instanceof Set) {\n            var newValue_1 = arrayType && this.transformationType === TransformationType.PLAIN_TO_CLASS ? new arrayType() : [];\n            value.forEach(function (subValue, index) {\n                var subSource = source ? source[index] : undefined;\n                if (!_this.options.enableCircularCheck || !_this.isCircular(subValue, level)) {\n                    var value_1 = _this.transform(subSource, subValue, targetType, undefined, subValue instanceof Map, level + 1);\n                    if (newValue_1 instanceof Set) {\n                        newValue_1.add(value_1);\n                    }\n                    else {\n                        newValue_1.push(value_1);\n                    }\n                }\n                else if (_this.transformationType === TransformationType.CLASS_TO_CLASS) {\n                    if (newValue_1 instanceof Set) {\n                        newValue_1.add(subValue);\n                    }\n                    else {\n                        newValue_1.push(subValue);\n                    }\n                }\n            });\n            return newValue_1;\n        }\n        else if (targetType === String && !isMap) {\n            return String(value);\n        }\n        else if (targetType === Number && !isMap) {\n            return Number(value);\n        }\n        else if (targetType === Boolean && !isMap) {\n            return Boolean(value);\n        }\n        else if ((targetType === Date || value instanceof Date) && !isMap) {\n            if (value instanceof Date) {\n                return new Date(value.valueOf());\n            }\n            if (value === null || value === undefined)\n                return value;\n            return new Date(value);\n        }\n        else if (typeof value === \"object\" && value !== null) {\n            // try to guess the type\n            if (!targetType && value.constructor !== Object /* && TransformationType === TransformationType.CLASS_TO_PLAIN*/)\n                targetType = value.constructor;\n            if (!targetType && source)\n                targetType = source.constructor;\n            if (this.options.enableCircularCheck) {\n                // add transformed type to prevent circular references\n                this.transformedTypesMap.set(value, { level: level, object: value });\n            }\n            var keys = this.getKeys(targetType, value);\n            var newValue = source ? source : {};\n            if (!source && (this.transformationType === TransformationType.PLAIN_TO_CLASS || this.transformationType === TransformationType.CLASS_TO_CLASS)) {\n                if (isMap) {\n                    newValue = new Map();\n                }\n                else if (targetType) {\n                    newValue = new targetType();\n                }\n                else {\n                    newValue = {};\n                }\n            }\n            var _loop_1 = function (key) {\n                var valueKey = key, newValueKey = key, propertyName = key;\n                if (!this_1.options.ignoreDecorators && targetType) {\n                    if (this_1.transformationType === TransformationType.PLAIN_TO_CLASS) {\n                        var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadataByCustomName(targetType, key);\n                        if (exposeMetadata) {\n                            propertyName = exposeMetadata.propertyName;\n                            newValueKey = exposeMetadata.propertyName;\n                        }\n                    }\n                    else if (this_1.transformationType === TransformationType.CLASS_TO_PLAIN || this_1.transformationType === TransformationType.CLASS_TO_CLASS) {\n                        var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(targetType, key);\n                        if (exposeMetadata && exposeMetadata.options && exposeMetadata.options.name)\n                            newValueKey = exposeMetadata.options.name;\n                    }\n                }\n                // get a subvalue\n                var subValue = undefined;\n                if (value instanceof Map) {\n                    subValue = value.get(valueKey);\n                }\n                else if (value[valueKey] instanceof Function) {\n                    subValue = value[valueKey]();\n                }\n                else {\n                    subValue = value[valueKey];\n                }\n                // determine a type\n                var type = undefined, isSubValueMap = subValue instanceof Map;\n                if (targetType && isMap) {\n                    type = targetType;\n                }\n                else if (targetType) {\n                    var metadata = storage_1.defaultMetadataStorage.findTypeMetadata(targetType, propertyName);\n                    if (metadata) {\n                        var options = { newObject: newValue, object: value, property: propertyName };\n                        type = metadata.typeFunction(options);\n                        isSubValueMap = isSubValueMap || metadata.reflectedType === Map;\n                    }\n                    else if (this_1.options.targetMaps) {\n                        this_1.options.targetMaps\n                            .filter(function (map) { return map.target === targetType && !!map.properties[propertyName]; })\n                            .forEach(function (map) { return type = map.properties[propertyName]; });\n                    }\n                }\n                // if value is an array try to get its custom array type\n                var arrayType_1 = value[valueKey] instanceof Array ? this_1.getReflectedType(targetType, propertyName) : undefined;\n                // const subValueKey = TransformationType === TransformationType.PLAIN_TO_CLASS && newKeyName ? newKeyName : key;\n                var subSource = source ? source[valueKey] : undefined;\n                // if its deserialization then type if required\n                // if we uncomment this types like string[] will not work\n                // if (this.transformationType === TransformationType.PLAIN_TO_CLASS && !type && subValue instanceof Object && !(subValue instanceof Date))\n                //     throw new Error(`Cannot determine type for ${(targetType as any).name }.${propertyName}, did you forget to specify a @Type?`);\n                // if newValue is a source object that has method that match newKeyName then skip it\n                if (newValue.constructor.prototype) {\n                    var descriptor = Object.getOwnPropertyDescriptor(newValue.constructor.prototype, newValueKey);\n                    if ((this_1.transformationType === TransformationType.PLAIN_TO_CLASS || this_1.transformationType === TransformationType.CLASS_TO_CLASS)\n                        && (newValue[newValueKey] instanceof Function || (descriptor && !descriptor.set)))\n                        return \"continue\";\n                }\n                if (!this_1.options.enableCircularCheck || !this_1.isCircular(subValue, level)) {\n                    var transformKey = this_1.transformationType === TransformationType.PLAIN_TO_CLASS ? newValueKey : key;\n                    var finalValue = this_1.transform(subSource, subValue, type, arrayType_1, isSubValueMap, level + 1);\n                    finalValue = this_1.applyCustomTransformations(finalValue, targetType, transformKey, value, this_1.transformationType);\n                    if (newValue instanceof Map) {\n                        newValue.set(newValueKey, finalValue);\n                    }\n                    else {\n                        newValue[newValueKey] = finalValue;\n                    }\n                }\n                else if (this_1.transformationType === TransformationType.CLASS_TO_CLASS) {\n                    var finalValue = subValue;\n                    finalValue = this_1.applyCustomTransformations(finalValue, targetType, key, value, this_1.transformationType);\n                    if (newValue instanceof Map) {\n                        newValue.set(newValueKey, finalValue);\n                    }\n                    else {\n                        newValue[newValueKey] = finalValue;\n                    }\n                }\n            };\n            var this_1 = this;\n            // traverse over keys\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                _loop_1(key);\n            }\n            return newValue;\n        }\n        else {\n            return value;\n        }\n    };\n    TransformOperationExecutor.prototype.applyCustomTransformations = function (value, target, key, obj, transformationType) {\n        var _this = this;\n        var metadatas = storage_1.defaultMetadataStorage.findTransformMetadatas(target, key, this.transformationType);\n        // apply versioning options\n        if (this.options.version !== undefined) {\n            metadatas = metadatas.filter(function (metadata) {\n                if (!metadata.options)\n                    return true;\n                return _this.checkVersion(metadata.options.since, metadata.options.until);\n            });\n        }\n        // apply grouping options\n        if (this.options.groups && this.options.groups.length) {\n            metadatas = metadatas.filter(function (metadata) {\n                if (!metadata.options)\n                    return true;\n                return _this.checkGroups(metadata.options.groups);\n            });\n        }\n        else {\n            metadatas = metadatas.filter(function (metadata) {\n                return !metadata.options || !metadata.options.groups || !metadata.options.groups.length;\n            });\n        }\n        metadatas.forEach(function (metadata) {\n            value = metadata.transformFn(value, obj, transformationType);\n        });\n        return value;\n    };\n    // preventing circular references\n    TransformOperationExecutor.prototype.isCircular = function (object, level) {\n        var transformed = this.transformedTypesMap.get(object);\n        return transformed !== undefined && transformed.level < level;\n    };\n    TransformOperationExecutor.prototype.getReflectedType = function (target, propertyName) {\n        if (!target)\n            return undefined;\n        var meta = storage_1.defaultMetadataStorage.findTypeMetadata(target, propertyName);\n        return meta ? meta.reflectedType : undefined;\n    };\n    TransformOperationExecutor.prototype.getKeys = function (target, object) {\n        var _this = this;\n        // determine exclusion strategy\n        var strategy = storage_1.defaultMetadataStorage.getStrategy(target);\n        if (strategy === \"none\")\n            strategy = this.options.strategy || \"exposeAll\"; // exposeAll is default strategy\n        // get all keys that need to expose\n        var keys = [];\n        if (strategy === \"exposeAll\") {\n            if (object instanceof Map) {\n                keys = Array.from(object.keys());\n            }\n            else {\n                keys = Object.keys(object);\n            }\n        }\n        if (!this.options.ignoreDecorators && target) {\n            // add all exposed to list of keys\n            var exposedProperties = storage_1.defaultMetadataStorage.getExposedProperties(target, this.transformationType);\n            if (this.transformationType === TransformationType.PLAIN_TO_CLASS) {\n                exposedProperties = exposedProperties.map(function (key) {\n                    var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(target, key);\n                    if (exposeMetadata && exposeMetadata.options && exposeMetadata.options.name) {\n                        return exposeMetadata.options.name;\n                    }\n                    return key;\n                });\n            }\n            keys = keys.concat(exposedProperties);\n            // exclude excluded properties\n            var excludedProperties_1 = storage_1.defaultMetadataStorage.getExcludedProperties(target, this.transformationType);\n            if (excludedProperties_1.length > 0) {\n                keys = keys.filter(function (key) {\n                    return excludedProperties_1.indexOf(key) === -1;\n                });\n            }\n            // apply versioning options\n            if (this.options.version !== undefined) {\n                keys = keys.filter(function (key) {\n                    var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(target, key);\n                    if (!exposeMetadata || !exposeMetadata.options)\n                        return true;\n                    return _this.checkVersion(exposeMetadata.options.since, exposeMetadata.options.until);\n                });\n            }\n            // apply grouping options\n            if (this.options.groups && this.options.groups.length) {\n                keys = keys.filter(function (key) {\n                    var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(target, key);\n                    if (!exposeMetadata || !exposeMetadata.options)\n                        return true;\n                    return _this.checkGroups(exposeMetadata.options.groups);\n                });\n            }\n            else {\n                keys = keys.filter(function (key) {\n                    var exposeMetadata = storage_1.defaultMetadataStorage.findExposeMetadata(target, key);\n                    return !exposeMetadata || !exposeMetadata.options || !exposeMetadata.options.groups || !exposeMetadata.options.groups.length;\n                });\n            }\n        }\n        // exclude prefixed properties\n        if (this.options.excludePrefixes && this.options.excludePrefixes.length) {\n            keys = keys.filter(function (key) { return _this.options.excludePrefixes.every(function (prefix) {\n                return key.substr(0, prefix.length) !== prefix;\n            }); });\n        }\n        // make sure we have unique keys\n        keys = keys.filter(function (key, index, self) {\n            return self.indexOf(key) === index;\n        });\n        return keys;\n    };\n    TransformOperationExecutor.prototype.checkVersion = function (since, until) {\n        var decision = true;\n        if (decision && since)\n            decision = this.options.version >= since;\n        if (decision && until)\n            decision = this.options.version < until;\n        return decision;\n    };\n    TransformOperationExecutor.prototype.checkGroups = function (groups) {\n        if (!groups)\n            return true;\n        return this.options.groups.some(function (optionGroup) { return groups.indexOf(optionGroup) !== -1; });\n    };\n    return TransformOperationExecutor;\n}());\nexports.TransformOperationExecutor = TransformOperationExecutor;\n\n//# sourceMappingURL=TransformOperationExecutor.js.map\n"},"lineCount":317}},"hash":"9931a4ba286b3f7f4a83bf2b1cbc0e33","cacheData":{"env":{}},"id":174}